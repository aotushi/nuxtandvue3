version: '3'
services:
  # 主 Nginx 服务
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # 直接挂载根目录的配置文件
    ports:
      - "80:80"  # 主要访问入口
    networks:
      - web
    depends_on:
      - vue-blog
      - vue-blog-server
      - nuxt-app
    deploy:
      resources:
        limits:
          memory: 128M

  # Vue 博客相关服务
  vue-blog:
    image: aots/docker-nuxtvue3-vue-blog:v1.0
    ports:
      - "8080:80"
    networks:
      - web

  vue-blog-server:
    image: aots/docker-nuxtvue3-vue-blog-server:v1.0
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://vue-blog-mongo:27017/blog
      - PORT=9000
      - TZ=Asia/Shanghai
    networks:
      - web
    command: ["node", "index.js"]
    deploy:
      resources:
        limits:
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9000"]
      interval: 30s
      timeout: 10s
      retries: 3

  vue-blog-mongo:
    image: mongo:5.0.30
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - vue_blog_mongo_data:/data/db
    networks:
      - web
    command: mongod --bind_ip_all --noauth
    deploy:
      resources:
        limits:
          memory: 512M

  # Nuxt 应用
  nuxt-app:
    image: aots/docker-nuxtvue3-nuxt-app:v1.0
    environment:
      DATABASE_URL: mysql://root:rootpassword@mysql_db_container:3306/course
      NUXT_BASE_URL: https://jsonplaceholder.typicode.com
      JSON_SECRET: aaabbbcccddd
    command: >
      /bin/sh -c '
        echo "Waiting for database..." &&
        sleep 15 &&
        npx prisma generate --schema server/database/schema.prisma &&
        npm run build &&
        npx prisma migrate deploy --schema server/database/schema.prisma &&
        npx prisma db seed &&
        npm start
      '
    ports:
      - "3001:3000"
    networks:
      - web
    depends_on:
      mysql_db_container:
        condition: service_healthy

  # MySQL 服务
  mysql_db_container:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: course
    volumes:
      - mysql_db_data_container:/var/lib/mysql
    networks:
      - web
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Adminer 服务
  adminer_container:
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: mysql_db_container
    networks:
      - web

networks:
  web:
    driver: bridge  # 使用普通的 bridge 网络

volumes:
  vue_blog_mongo_data:
  mysql_db_data_container:

  # 其他卷定义保持不变 