version: '3'
services:
  # 主 Nginx 服务
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # 直接挂载根目录的配置文件
    ports:
      - "80:80"  # 主要访问入口
    networks:
      - web
    depends_on:
      - vue-blog
      - vue-blog-server
      - nuxt-app
    deploy:
      resources:
        limits:
          memory: 128M

  # Vue 博客相关服务
  vue-blog:
    build: 
      context: ./vue-jueblog
    ports:
      - "8080:80"  # 直接使用 80 端口
    networks:
      - web  # 只使用一个网络

  vue-blog-server:
    build:
      context: ./vue-jueblog/server
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://vue-blog-mongo:27017/blog
      - PORT=9000
      - TZ=Asia/Shanghai
    networks:
      - web
    command: ["node", "index.js"]
    deploy:
      resources:
        limits:
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9000"]
      interval: 30s
      timeout: 10s
      retries: 3

  vue-blog-mongo:
    image: mongo:5.0.30
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - vue_blog_mongo_data:/data/db
    networks:
      - web
    command: mongod --bind_ip_all --noauth
    deploy:
      resources:
        limits:
          memory: 512M

  # Nuxt 应用
  nuxt-app:
    extends:
      file: ./nuxt0/docker-compose.yml
      service: nuxt_app_container
    ports:
      - "3001:3000"
    networks:
      - web

  # MySQL 服务
  mysql_db_container:
    extends:
      file: ./nuxt0/docker-compose.yml
      service: mysql_db_container
    volumes:
      - mysql_db_data_container:/var/lib/mysql
    networks:
      - web

  # Adminer 服务
  adminer_container:
    extends:
      file: ./nuxt0/docker-compose.yml
      service: adminer_container
    networks:
      - web

networks:
  web:
    driver: bridge  # 使用普通的 bridge 网络

volumes:
  vue_blog_mongo_data:
  mysql_db_data_container:

  # 其他卷定义保持不变 